The approach relies on the at most one decrease point property of a sorted and rotated array. If there are more than one such points, the array cannot be sorted and rotated.

public bool Chcecksortedandrotated(int[] arr)
{
int counter = 0;
for(int i=0; i<arr.Length; i++)
{
if(arr[i] > arr[i+1])
{
counter++;
}
if(arr[arr.Length-1] > arr[0])
{
counter++;
}
return counter < = 1;
}
 

}
