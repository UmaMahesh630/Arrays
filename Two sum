Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].


public int[] TwoSum(int[] nums, int target)
{
    Dictionary<int,int> map = new Dictionary<int, int>();
    for(int i=0; i<nums.Length; i++)
      {
       int complemet = target - nums[i];
      if(map.ContainsKey(complemet))
      {

        return new int[] {map[complemet],i};
        
      }
        map[nums[i]] = i;


      }
return new int[0];

}
